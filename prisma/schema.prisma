// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  password     String
  tickets      Ticket[]
  Event        Event[]
  created_date DateTime @default(now())
  updated_date DateTime @updatedAt
}

model Event {
  id               String           @id @default(uuid())
  name             String
  date             DateTime
  time             String
  venue            String
  ticketCategories TicketCategory[]
  creatorId        String
  creator          User             @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  ticket           Ticket[]
  created_date     DateTime         @default(now())
  updated_date     DateTime         @updatedAt
}

model TicketCategory {
  id               String   @id @default(uuid())
  name             String
  price            Float
  eventId          String
  availableTickets Int
  event            Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  tickets          Ticket[]
  created_date     DateTime @default(now())
  updated_date     DateTime @updatedAt
}

model Ticket {
  id               String         @id @default(uuid())
  userId           String
  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  ticketCategoryId String
  ticketCategory   TicketCategory @relation(fields: [ticketCategoryId], references: [id], onDelete: Cascade)
  eventId          String
  event            Event          @relation(fields: [eventId], references: [id], onDelete: Cascade)
  quantity         Int
  created_date     DateTime       @default(now())
  updated_date     DateTime       @updatedAt
}
